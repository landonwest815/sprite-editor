<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>MainWindow</class>
 <widget class="QMainWindow" name="MainWindow">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>1000</width>
    <height>991</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>MainWindow</string>
  </property>
  <property name="styleSheet">
   <string notr="true">QWidget { background-color: rgb(48, 48, 48); }</string>
  </property>
  <widget class="QWidget" name="centralwidget">
   <layout class="QVBoxLayout" name="verticalLayout_2">
    <property name="leftMargin">
     <number>20</number>
    </property>
    <property name="topMargin">
     <number>20</number>
    </property>
    <property name="rightMargin">
     <number>20</number>
    </property>
    <property name="bottomMargin">
     <number>20</number>
    </property>
    <item>
     <layout class="QHBoxLayout" name="horizontalLayout">
      <item>
       <spacer name="horizontalSpacer_5">
        <property name="orientation">
         <enum>Qt::Horizontal</enum>
        </property>
        <property name="sizeType">
         <enum>QSizePolicy::Fixed</enum>
        </property>
        <property name="sizeHint" stdset="0">
         <size>
          <width>30</width>
          <height>20</height>
         </size>
        </property>
       </spacer>
      </item>
      <item>
       <widget class="QLabel" name="titleLabel">
        <property name="sizePolicy">
         <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
          <horstretch>0</horstretch>
          <verstretch>0</verstretch>
         </sizepolicy>
        </property>
        <property name="font">
         <font>
          <pointsize>20</pointsize>
          <italic>true</italic>
          <bold>true</bold>
         </font>
        </property>
        <property name="text">
         <string>Sprite Program</string>
        </property>
       </widget>
      </item>
      <item>
       <spacer name="horizontalSpacer">
        <property name="orientation">
         <enum>Qt::Horizontal</enum>
        </property>
        <property name="sizeHint" stdset="0">
         <size>
          <width>40</width>
          <height>20</height>
         </size>
        </property>
       </spacer>
      </item>
     </layout>
    </item>
    <item>
     <layout class="QVBoxLayout" name="verticalLayout_3">
      <item>
       <widget class="QTabWidget" name="tabWidget">
        <property name="sizePolicy">
         <sizepolicy hsizetype="Expanding" vsizetype="Fixed">
          <horstretch>0</horstretch>
          <verstretch>0</verstretch>
         </sizepolicy>
        </property>
        <property name="minimumSize">
         <size>
          <width>0</width>
          <height>80</height>
         </size>
        </property>
        <property name="maximumSize">
         <size>
          <width>16777215</width>
          <height>80</height>
         </size>
        </property>
        <property name="styleSheet">
         <string notr="true">QTabWidget::tab-bar {
    alignment: center;
}

/* Style the tab itself */
QTabBar::tab {
    background: #646464; /* Light gray background */
    color: white; /* Dark text color for contrast */
    padding: 5px; /* Space between text and edge */
    margin-left: 5px; /* Space between tabs */
    border-top-left-radius: 5px; /* Rounded top left corner */
    border-top-right-radius: 5px; /* Rounded top right corner */
   border-bottom-left-radius: 5px; /* Rounded top left corner */
    border-bottom-right-radius: 5px; /* Rounded top right corner */
}

/* Style the selected tab */
QTabBar::tab:selected {
    background: #999999; /* A different shade for the selected tab */
}</string>
        </property>
        <property name="currentIndex">
         <number>1</number>
        </property>
        <property name="tabBarAutoHide">
         <bool>false</bool>
        </property>
        <widget class="QWidget" name="saveloadTab">
         <attribute name="title">
          <string>Save / Load</string>
         </attribute>
         <widget class="QPushButton" name="saveButton">
          <property name="geometry">
           <rect>
            <x>30</x>
            <y>10</y>
            <width>100</width>
            <height>25</height>
           </rect>
          </property>
          <property name="minimumSize">
           <size>
            <width>100</width>
            <height>25</height>
           </size>
          </property>
          <property name="maximumSize">
           <size>
            <width>100</width>
            <height>25</height>
           </size>
          </property>
          <property name="styleSheet">
           <string notr="true">QPushButton {
  background-color: #646464; /* Dark grey background, matching the handle */
  color: white; /* Light text for contrast */
  border-radius: 5px; /* Rounded corners with a radius of 10 pixels */
}

QPushButton:hover {
  background-color: #505050; /* Slightly lighter grey for hover state */
}

QPushButton:pressed {
  background-color: #303030; /* Slightly darker grey for pressed state */
}

QPushButton:checked {
  background-color: #999999; /* Color when button is checked */
}</string>
          </property>
          <property name="text">
           <string>Save</string>
          </property>
         </widget>
         <widget class="QPushButton" name="loadButton">
          <property name="geometry">
           <rect>
            <x>140</x>
            <y>10</y>
            <width>100</width>
            <height>25</height>
           </rect>
          </property>
          <property name="minimumSize">
           <size>
            <width>100</width>
            <height>25</height>
           </size>
          </property>
          <property name="maximumSize">
           <size>
            <width>100</width>
            <height>25</height>
           </size>
          </property>
          <property name="styleSheet">
           <string notr="true">QPushButton {
  background-color: #646464; /* Dark grey background, matching the handle */
  color: white; /* Light text for contrast */
  border-radius: 5px; /* Rounded corners with a radius of 10 pixels */
}

QPushButton:hover {
  background-color: #505050; /* Slightly lighter grey for hover state */
}

QPushButton:pressed {
  background-color: #303030; /* Slightly darker grey for pressed state */
}

QPushButton:checked {
  background-color: #999999; /* Color when button is checked */
}</string>
          </property>
          <property name="text">
           <string>Load</string>
          </property>
         </widget>
         <widget class="QLineEdit" name="nameEntryBox">
          <property name="geometry">
           <rect>
            <x>250</x>
            <y>10</y>
            <width>224</width>
            <height>24</height>
           </rect>
          </property>
          <property name="sizePolicy">
           <sizepolicy hsizetype="Minimum" vsizetype="Fixed">
            <horstretch>0</horstretch>
            <verstretch>0</verstretch>
           </sizepolicy>
          </property>
          <property name="inputMask">
           <string/>
          </property>
          <property name="text">
           <string/>
          </property>
          <property name="alignment">
           <set>Qt::AlignCenter</set>
          </property>
          <property name="placeholderText">
           <string>Program Name Here</string>
          </property>
          <property name="clearButtonEnabled">
           <bool>false</bool>
          </property>
         </widget>
        </widget>
        <widget class="QWidget" name="accessibilityTab">
         <property name="palette">
          <palette>
           <active>
            <colorrole role="Button">
             <brush brushstyle="SolidPattern">
              <color alpha="255">
               <red>48</red>
               <green>48</green>
               <blue>48</blue>
              </color>
             </brush>
            </colorrole>
            <colorrole role="Base">
             <brush brushstyle="SolidPattern">
              <color alpha="255">
               <red>48</red>
               <green>48</green>
               <blue>48</blue>
              </color>
             </brush>
            </colorrole>
            <colorrole role="Window">
             <brush brushstyle="SolidPattern">
              <color alpha="255">
               <red>48</red>
               <green>48</green>
               <blue>48</blue>
              </color>
             </brush>
            </colorrole>
           </active>
           <inactive>
            <colorrole role="Button">
             <brush brushstyle="SolidPattern">
              <color alpha="255">
               <red>48</red>
               <green>48</green>
               <blue>48</blue>
              </color>
             </brush>
            </colorrole>
            <colorrole role="Base">
             <brush brushstyle="SolidPattern">
              <color alpha="255">
               <red>48</red>
               <green>48</green>
               <blue>48</blue>
              </color>
             </brush>
            </colorrole>
            <colorrole role="Window">
             <brush brushstyle="SolidPattern">
              <color alpha="255">
               <red>48</red>
               <green>48</green>
               <blue>48</blue>
              </color>
             </brush>
            </colorrole>
           </inactive>
           <disabled>
            <colorrole role="Button">
             <brush brushstyle="SolidPattern">
              <color alpha="255">
               <red>48</red>
               <green>48</green>
               <blue>48</blue>
              </color>
             </brush>
            </colorrole>
            <colorrole role="Base">
             <brush brushstyle="SolidPattern">
              <color alpha="255">
               <red>48</red>
               <green>48</green>
               <blue>48</blue>
              </color>
             </brush>
            </colorrole>
            <colorrole role="Window">
             <brush brushstyle="SolidPattern">
              <color alpha="255">
               <red>48</red>
               <green>48</green>
               <blue>48</blue>
              </color>
             </brush>
            </colorrole>
           </disabled>
          </palette>
         </property>
         <attribute name="title">
          <string>Assessibility Features</string>
         </attribute>
         <widget class="QPushButton" name="tutorialButton">
          <property name="geometry">
           <rect>
            <x>30</x>
            <y>10</y>
            <width>100</width>
            <height>25</height>
           </rect>
          </property>
          <property name="minimumSize">
           <size>
            <width>100</width>
            <height>25</height>
           </size>
          </property>
          <property name="maximumSize">
           <size>
            <width>100</width>
            <height>25</height>
           </size>
          </property>
          <property name="styleSheet">
           <string notr="true">QPushButton {
  background-color: #646464; /* Dark grey background, matching the handle */
  color: white; /* Light text for contrast */
  border-radius: 5px; /* Rounded corners with a radius of 10 pixels */
}

QPushButton:hover {
  background-color: #505050; /* Slightly lighter grey for hover state */
}

QPushButton:pressed {
  background-color: #303030; /* Slightly darker grey for pressed state */
}

QPushButton:checked {
  background-color: #999999; /* Color when button is checked */
}</string>
          </property>
          <property name="text">
           <string>Tutorial</string>
          </property>
         </widget>
         <widget class="QPushButton" name="darkModeButton">
          <property name="geometry">
           <rect>
            <x>140</x>
            <y>10</y>
            <width>100</width>
            <height>25</height>
           </rect>
          </property>
          <property name="minimumSize">
           <size>
            <width>100</width>
            <height>25</height>
           </size>
          </property>
          <property name="maximumSize">
           <size>
            <width>100</width>
            <height>25</height>
           </size>
          </property>
          <property name="styleSheet">
           <string notr="true">QPushButton {
  background-color: #646464; /* Dark grey background, matching the handle */
  color: white; /* Light text for contrast */
  border-radius: 5px; /* Rounded corners with a radius of 10 pixels */
}

QPushButton:hover {
  background-color: #505050; /* Slightly lighter grey for hover state */
}

QPushButton:pressed {
  background-color: #303030; /* Slightly darker grey for pressed state */
}

QPushButton:checked {
  background-color: #999999; /* Color when button is checked */
}</string>
          </property>
          <property name="text">
           <string>Dark Mode</string>
          </property>
          <property name="checkable">
           <bool>true</bool>
          </property>
         </widget>
         <widget class="QPushButton" name="speechModeButton">
          <property name="geometry">
           <rect>
            <x>250</x>
            <y>10</y>
            <width>100</width>
            <height>25</height>
           </rect>
          </property>
          <property name="sizePolicy">
           <sizepolicy hsizetype="Minimum" vsizetype="Fixed">
            <horstretch>0</horstretch>
            <verstretch>0</verstretch>
           </sizepolicy>
          </property>
          <property name="minimumSize">
           <size>
            <width>100</width>
            <height>25</height>
           </size>
          </property>
          <property name="maximumSize">
           <size>
            <width>100</width>
            <height>25</height>
           </size>
          </property>
          <property name="styleSheet">
           <string notr="true">QPushButton {
  background-color: #646464; /* Dark grey background, matching the handle */
  color: white; /* Light text for contrast */
  border-radius: 5px; /* Rounded corners with a radius of 10 pixels */
}

QPushButton:hover {
  background-color: #505050; /* Slightly lighter grey for hover state */
}

QPushButton:pressed {
  background-color: #303030; /* Slightly darker grey for pressed state */
}

QPushButton:checked {
  background-color: #999999; /* Color when button is checked */
}</string>
          </property>
          <property name="text">
           <string>Speech Mode</string>
          </property>
          <property name="checkable">
           <bool>true</bool>
          </property>
         </widget>
         <widget class="QPushButton" name="largeTextButton">
          <property name="geometry">
           <rect>
            <x>360</x>
            <y>10</y>
            <width>100</width>
            <height>25</height>
           </rect>
          </property>
          <property name="minimumSize">
           <size>
            <width>100</width>
            <height>25</height>
           </size>
          </property>
          <property name="maximumSize">
           <size>
            <width>100</width>
            <height>25</height>
           </size>
          </property>
          <property name="styleSheet">
           <string notr="true">QPushButton {
  background-color: #646464; /* Dark grey background, matching the handle */
  color: white; /* Light text for contrast */
  border-radius: 5px; /* Rounded corners with a radius of 10 pixels */
}

QPushButton:hover {
  background-color: #505050; /* Slightly lighter grey for hover state */
}

QPushButton:pressed {
  background-color: #303030; /* Slightly darker grey for pressed state */
}

QPushButton:checked {
  background-color: #999999; /* Color when button is checked */
}</string>
          </property>
          <property name="text">
           <string>Large Text</string>
          </property>
          <property name="checkable">
           <bool>true</bool>
          </property>
         </widget>
        </widget>
       </widget>
      </item>
     </layout>
    </item>
    <item>
     <spacer name="verticalSpacer_5">
      <property name="orientation">
       <enum>Qt::Vertical</enum>
      </property>
      <property name="sizeType">
       <enum>QSizePolicy::Fixed</enum>
      </property>
      <property name="sizeHint" stdset="0">
       <size>
        <width>20</width>
        <height>20</height>
       </size>
      </property>
     </spacer>
    </item>
    <item>
     <layout class="QHBoxLayout" name="horizontalLayout_2" stretch="0,0,0,0,0">
      <property name="spacing">
       <number>6</number>
      </property>
      <item>
       <layout class="QVBoxLayout" name="verticalLayout">
        <property name="spacing">
         <number>6</number>
        </property>
        <item>
         <spacer name="verticalSpacer_10">
          <property name="orientation">
           <enum>Qt::Vertical</enum>
          </property>
          <property name="sizeType">
           <enum>QSizePolicy::Fixed</enum>
          </property>
          <property name="sizeHint" stdset="0">
           <size>
            <width>20</width>
            <height>15</height>
           </size>
          </property>
         </spacer>
        </item>
        <item>
         <widget class="QLabel" name="toolsLabel">
          <property name="font">
           <font>
            <italic>true</italic>
            <bold>true</bold>
            <underline>false</underline>
           </font>
          </property>
          <property name="text">
           <string>Tools</string>
          </property>
         </widget>
        </item>
        <item>
         <widget class="QLabel" name="drawLabel">
          <property name="text">
           <string>Draw</string>
          </property>
         </widget>
        </item>
        <item>
         <widget class="QPushButton" name="penTool">
          <property name="sizePolicy">
           <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
            <horstretch>0</horstretch>
            <verstretch>0</verstretch>
           </sizepolicy>
          </property>
          <property name="minimumSize">
           <size>
            <width>30</width>
            <height>30</height>
           </size>
          </property>
          <property name="maximumSize">
           <size>
            <width>30</width>
            <height>30</height>
           </size>
          </property>
          <property name="styleSheet">
           <string notr="true">QPushButton {
  background-color: #646464; /* Dark grey background, matching the handle */
  color: white; /* Light text for contrast */
  border-radius: 5px; /* Rounded corners with a radius of 10 pixels */
}

QPushButton:hover {
  background-color: #505050; /* Slightly lighter grey for hover state */
}

QPushButton:pressed {
  background-color: #303030; /* Slightly darker grey for pressed state */
}

QPushButton:checked {
  background-color: #999999; /* Color when button is checked */
}</string>
          </property>
          <property name="text">
           <string/>
          </property>
          <property name="icon">
           <iconset resource="Assets.qrc">
            <normaloff>:/icons/pen.png</normaloff>:/icons/pen.png</iconset>
          </property>
          <property name="checkable">
           <bool>true</bool>
          </property>
         </widget>
        </item>
        <item>
         <spacer name="verticalSpacer_6">
          <property name="orientation">
           <enum>Qt::Vertical</enum>
          </property>
          <property name="sizeType">
           <enum>QSizePolicy::Fixed</enum>
          </property>
          <property name="sizeHint" stdset="0">
           <size>
            <width>20</width>
            <height>5</height>
           </size>
          </property>
         </spacer>
        </item>
        <item>
         <widget class="QLabel" name="erase">
          <property name="text">
           <string>Erase</string>
          </property>
         </widget>
        </item>
        <item>
         <widget class="QPushButton" name="eraseTool">
          <property name="sizePolicy">
           <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
            <horstretch>0</horstretch>
            <verstretch>0</verstretch>
           </sizepolicy>
          </property>
          <property name="minimumSize">
           <size>
            <width>30</width>
            <height>30</height>
           </size>
          </property>
          <property name="maximumSize">
           <size>
            <width>30</width>
            <height>30</height>
           </size>
          </property>
          <property name="styleSheet">
           <string notr="true">QPushButton {
  background-color: #646464; /* Dark grey background, matching the handle */
  color: white; /* Light text for contrast */
  border-radius: 5px; /* Rounded corners with a radius of 10 pixels */
}

QPushButton:hover {
  background-color: #505050; /* Slightly lighter grey for hover state */
}

QPushButton:pressed {
  background-color: #303030; /* Slightly darker grey for pressed state */
}

QPushButton:checked {
  background-color: #999999; /* Color when button is checked */
}</string>
          </property>
          <property name="text">
           <string/>
          </property>
          <property name="icon">
           <iconset resource="Assets.qrc">
            <normaloff>:/icons/erase.png</normaloff>:/icons/erase.png</iconset>
          </property>
          <property name="checkable">
           <bool>true</bool>
          </property>
         </widget>
        </item>
        <item>
         <spacer name="verticalSpacer_8">
          <property name="orientation">
           <enum>Qt::Vertical</enum>
          </property>
          <property name="sizeType">
           <enum>QSizePolicy::Fixed</enum>
          </property>
          <property name="sizeHint" stdset="0">
           <size>
            <width>20</width>
            <height>35</height>
           </size>
          </property>
         </spacer>
        </item>
        <item>
         <widget class="QLabel" name="toolSettingLabel">
          <property name="font">
           <font>
            <italic>true</italic>
            <bold>true</bold>
            <underline>false</underline>
           </font>
          </property>
          <property name="text">
           <string>Tool Settings</string>
          </property>
         </widget>
        </item>
        <item>
         <layout class="QVBoxLayout" name="verticalLayout_4">
          <property name="spacing">
           <number>0</number>
          </property>
          <item>
           <widget class="QLabel" name="toolSizeLabel">
            <property name="text">
             <string>Tool Size</string>
            </property>
           </widget>
          </item>
          <item>
           <widget class="QSpinBox" name="toolSizeSpin">
            <property name="sizePolicy">
             <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
              <horstretch>0</horstretch>
              <verstretch>0</verstretch>
             </sizepolicy>
            </property>
            <property name="maximum">
             <number>10</number>
            </property>
            <property name="value">
             <number>1</number>
            </property>
           </widget>
          </item>
         </layout>
        </item>
        <item>
         <layout class="QHBoxLayout" name="horizontalLayout_10">
          <item>
           <widget class="QLabel" name="redLabel">
            <property name="text">
             <string>Red:</string>
            </property>
           </widget>
          </item>
          <item>
           <widget class="QSpinBox" name="redSpin">
            <property name="maximum">
             <number>255</number>
            </property>
           </widget>
          </item>
         </layout>
        </item>
        <item>
         <layout class="QHBoxLayout" name="horizontalLayout_11">
          <item>
           <widget class="QLabel" name="blueLabel">
            <property name="text">
             <string>Blue:</string>
            </property>
           </widget>
          </item>
          <item>
           <widget class="QSpinBox" name="blueSpin">
            <property name="maximum">
             <number>255</number>
            </property>
           </widget>
          </item>
         </layout>
        </item>
        <item>
         <layout class="QHBoxLayout" name="horizontalLayout_12">
          <item>
           <widget class="QLabel" name="greenLabel">
            <property name="text">
             <string>Green:</string>
            </property>
           </widget>
          </item>
          <item>
           <widget class="QSpinBox" name="greenSpin">
            <property name="maximum">
             <number>255</number>
            </property>
           </widget>
          </item>
         </layout>
        </item>
        <item>
         <spacer name="verticalSpacer_9">
          <property name="orientation">
           <enum>Qt::Vertical</enum>
          </property>
          <property name="sizeType">
           <enum>QSizePolicy::Fixed</enum>
          </property>
          <property name="sizeHint" stdset="0">
           <size>
            <width>20</width>
            <height>5</height>
           </size>
          </property>
         </spacer>
        </item>
        <item>
         <widget class="QLabel" name="mirrorLabel">
          <property name="text">
           <string>Mirror</string>
          </property>
         </widget>
        </item>
        <item>
         <widget class="QPushButton" name="mirrorTool">
          <property name="sizePolicy">
           <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
            <horstretch>0</horstretch>
            <verstretch>0</verstretch>
           </sizepolicy>
          </property>
          <property name="minimumSize">
           <size>
            <width>30</width>
            <height>30</height>
           </size>
          </property>
          <property name="maximumSize">
           <size>
            <width>30</width>
            <height>30</height>
           </size>
          </property>
          <property name="styleSheet">
           <string notr="true">QPushButton {
  background-color: #646464; /* Dark grey background, matching the handle */
  color: white; /* Light text for contrast */
  border-radius: 5px; /* Rounded corners with a radius of 10 pixels */
}

QPushButton:hover {
  background-color: #505050; /* Slightly lighter grey for hover state */
}

QPushButton:pressed {
  background-color: #303030; /* Slightly darker grey for pressed state */
}

QPushButton:checked {
  background-color: #999999; /* Color when button is checked */
}</string>
          </property>
          <property name="text">
           <string/>
          </property>
          <property name="icon">
           <iconset resource="Assets.qrc">
            <normaloff>:/icons/mirror.png</normaloff>:/icons/mirror.png</iconset>
          </property>
          <property name="checkable">
           <bool>true</bool>
          </property>
          <property name="checked">
           <bool>false</bool>
          </property>
         </widget>
        </item>
        <item>
         <spacer name="verticalSpacer_2">
          <property name="orientation">
           <enum>Qt::Vertical</enum>
          </property>
          <property name="sizeHint" stdset="0">
           <size>
            <width>20</width>
            <height>40</height>
           </size>
          </property>
         </spacer>
        </item>
       </layout>
      </item>
      <item>
       <spacer name="horizontalSpacer_3">
        <property name="orientation">
         <enum>Qt::Horizontal</enum>
        </property>
        <property name="sizeHint" stdset="0">
         <size>
          <width>40</width>
          <height>20</height>
         </size>
        </property>
       </spacer>
      </item>
      <item>
       <widget class="QLabel" name="pixMapLabel">
        <property name="sizePolicy">
         <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
          <horstretch>0</horstretch>
          <verstretch>0</verstretch>
         </sizepolicy>
        </property>
        <property name="minimumSize">
         <size>
          <width>500</width>
          <height>500</height>
         </size>
        </property>
        <property name="maximumSize">
         <size>
          <width>500</width>
          <height>500</height>
         </size>
        </property>
        <property name="sizeIncrement">
         <size>
          <width>0</width>
          <height>0</height>
         </size>
        </property>
        <property name="cursor">
         <cursorShape>CrossCursor</cursorShape>
        </property>
        <property name="styleSheet">
         <string notr="true"/>
        </property>
        <property name="text">
         <string/>
        </property>
       </widget>
      </item>
      <item>
       <spacer name="horizontalSpacer_4">
        <property name="orientation">
         <enum>Qt::Horizontal</enum>
        </property>
        <property name="sizeHint" stdset="0">
         <size>
          <width>40</width>
          <height>20</height>
         </size>
        </property>
       </spacer>
      </item>
      <item>
       <layout class="QVBoxLayout" name="verticalLayout_8">
        <item>
         <widget class="QLabel" name="previewLabel_2">
          <property name="font">
           <font>
            <italic>true</italic>
            <bold>true</bold>
           </font>
          </property>
          <property name="text">
           <string>Preview</string>
          </property>
         </widget>
        </item>
        <item>
         <widget class="QLabel" name="previewLabel">
          <property name="sizePolicy">
           <sizepolicy hsizetype="Preferred" vsizetype="Preferred">
            <horstretch>0</horstretch>
            <verstretch>0</verstretch>
           </sizepolicy>
          </property>
          <property name="minimumSize">
           <size>
            <width>125</width>
            <height>125</height>
           </size>
          </property>
          <property name="maximumSize">
           <size>
            <width>125</width>
            <height>125</height>
           </size>
          </property>
          <property name="text">
           <string/>
          </property>
         </widget>
        </item>
        <item>
         <spacer name="verticalSpacer">
          <property name="orientation">
           <enum>Qt::Vertical</enum>
          </property>
          <property name="sizeHint" stdset="0">
           <size>
            <width>20</width>
            <height>40</height>
           </size>
          </property>
         </spacer>
        </item>
       </layout>
      </item>
     </layout>
    </item>
    <item>
     <spacer name="verticalSpacer_4">
      <property name="orientation">
       <enum>Qt::Vertical</enum>
      </property>
      <property name="sizeType">
       <enum>QSizePolicy::Fixed</enum>
      </property>
      <property name="sizeHint" stdset="0">
       <size>
        <width>20</width>
        <height>20</height>
       </size>
      </property>
     </spacer>
    </item>
    <item>
     <layout class="QHBoxLayout" name="horizontalLayout_5">
      <item>
       <widget class="QScrollArea" name="scrollArea">
        <property name="sizePolicy">
         <sizepolicy hsizetype="Expanding" vsizetype="Fixed">
          <horstretch>0</horstretch>
          <verstretch>0</verstretch>
         </sizepolicy>
        </property>
        <property name="minimumSize">
         <size>
          <width>5</width>
          <height>75</height>
         </size>
        </property>
        <property name="maximumSize">
         <size>
          <width>5</width>
          <height>75</height>
         </size>
        </property>
        <property name="styleSheet">
         <string notr="true">QScrollBar:horizontal {
  background: #646464; /* White background */
  height: 6px; /* Slim profile */
  margin: 0px 0px 0px 0px;
  border: 1px solid #999999; /* Light grey border */
  border-radius: 2.5px;
}

QScrollBar::handle:horizontal {
  background: #999999; /* Light grey handle */
  min-width: 20px; /* Minimum width for the handle */
}

/* Hide the left/right buttons and the extra space for the buttons */
QScrollBar::add-line:horizontal, QScrollBar::sub-line:horizontal,
QScrollBar::add-page:horizontal, QScrollBar::sub-page:horizontal {
  height: 0px;
  width: 0px;
}</string>
        </property>
        <property name="frameShape">
         <enum>QFrame::NoFrame</enum>
        </property>
        <property name="lineWidth">
         <number>0</number>
        </property>
        <property name="verticalScrollBarPolicy">
         <enum>Qt::ScrollBarAlwaysOff</enum>
        </property>
        <property name="widgetResizable">
         <bool>true</bool>
        </property>
        <property name="alignment">
         <set>Qt::AlignLeading|Qt::AlignLeft|Qt::AlignTop</set>
        </property>
        <widget class="QWidget" name="scrollAreaWidgetContents">
         <property name="geometry">
          <rect>
           <x>0</x>
           <y>0</y>
           <width>24</width>
           <height>69</height>
          </rect>
         </property>
         <layout class="QHBoxLayout" name="horizontalLayout_3">
          <property name="spacing">
           <number>15</number>
          </property>
          <property name="leftMargin">
           <number>12</number>
          </property>
         </layout>
        </widget>
       </widget>
      </item>
      <item>
       <widget class="QPushButton" name="addFrameButton">
        <property name="sizePolicy">
         <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
          <horstretch>0</horstretch>
          <verstretch>0</verstretch>
         </sizepolicy>
        </property>
        <property name="minimumSize">
         <size>
          <width>25</width>
          <height>25</height>
         </size>
        </property>
        <property name="maximumSize">
         <size>
          <width>25</width>
          <height>25</height>
         </size>
        </property>
        <property name="font">
         <font>
          <pointsize>13</pointsize>
          <bold>true</bold>
         </font>
        </property>
        <property name="styleSheet">
         <string notr="true">QPushButton {
  background-color: #646464; /* Dark grey background, matching the handle */
  color: white; /* Light text for contrast */
  border-radius: 5px; /* Rounded corners with a radius of 10 pixels */
}

QPushButton:hover {
  background-color: #505050; /* Slightly lighter grey for hover state */
}

QPushButton:pressed {
  background-color: #303030; /* Slightly darker grey for pressed state */
}

QPushButton:checked {
  background-color: #999999; /* Color when button is checked */
}</string>
        </property>
        <property name="text">
         <string>+</string>
        </property>
       </widget>
      </item>
      <item>
       <spacer name="horizontalSpacer_2">
        <property name="orientation">
         <enum>Qt::Horizontal</enum>
        </property>
        <property name="sizeHint" stdset="0">
         <size>
          <width>40</width>
          <height>20</height>
         </size>
        </property>
       </spacer>
      </item>
     </layout>
    </item>
   </layout>
  </widget>
  <widget class="QMenuBar" name="menubar">
   <property name="geometry">
    <rect>
     <x>0</x>
     <y>0</y>
     <width>1000</width>
     <height>22</height>
    </rect>
   </property>
  </widget>
  <widget class="QStatusBar" name="statusbar"/>
 </widget>
 <resources>
  <include location="Assets.qrc"/>
 </resources>
 <connections/>
</ui>
